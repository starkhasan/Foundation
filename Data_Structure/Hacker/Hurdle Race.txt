public static int partition(int[] ar,int p,int r){
        int i=p-1;
        for(int j=p;j<r;j++){
            if(ar[j]<ar[r]){
                i=i+1;
                int temp=ar[i];
                ar[i]=ar[j];
                ar[j]=temp;
            }
        }
        int temp=ar[i+1];
        ar[i+1]=ar[r];
        ar[r]=temp;
        return i+1;
    }
    public static void quickSort(int[] ar,int p,int r){
        if(p<r){
            int q = partition(ar,p,r);
            quickSort(ar, p, q-1);
            quickSort(ar, q+1, r);
        }
    }

    // Complete the hurdleRace function below.
    static int hurdleRace(int k, int[] height) {
        quickSort(height,0,height.length-1);
        int hurdle = height[height.length-1];

        int result=0;
        if(hurdle>k){
            result = hurdle-k;
        }else{
            result=0;
        }

        return result;
    }