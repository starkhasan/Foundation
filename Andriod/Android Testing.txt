Testing of Android Application :--------------------------------------------

Testing your app is an integral part of the app development process. By running test against your app consistently you can verify your app's correctness, functional behavior and usability 
before you release it publicly..

Testing also provides you with  the following adavantages:
1) Rapid feedback on failures
2) Early failure detection in the development cycle.
3) Safer code refactoring letting you optimize code without worrying about regressions.
4) Stable development velocity helping you minimize technical debt.



Android is the largest operating system in the world. At the same time Android is fragmented there are tons of device and Android version that your app must be compatible with.

Application must be campatible with variety of devices
It doesn't matter how much time you invest in design and implementation mistakes and inevitable and bugs will appear.


Typical failure in Android Application

1) Application installation Failure
2) Application crash during execution
3) Scaling/Layout Problems
4) Application hangs if some resource is not available
5) Problems in landscape/portait mode


=> Android Testing Strategy
A correct android testing should include the following
1) Unit Test
2) Integration Test
3) Operational Test
4) System Test



1) Unit Test :--------------------------------------------
Unit Tests includes sets of one or more programs which are designed to verify an atomic unit of source code such as a method or a class.
Android platform comes pre-integrated Junit 3.0 framework. It's open source framework for automating Unit Testing. Android Testing Framework is powerful tool for developer to write the 
effective unit test program.


An addition to Unit Testing is User Interface (UI) test. These tests related to UI components of your target application. UI tests ensure that your application reurn the correct UI out out 
response to sequence of user actions on device.

One of the best tools to conduct UI testing on Android is Robotium.




2) Integration tests :------------------------------------------
 In Integration Testing all unit tested  modules are combined and verified.
 In Android integration tests often invoked checking integration with Android component such as Service testing, Activity testing, Content Provider testing.


=> Activty testing 
Activities have complex lifecycle provided by ActivityManager
UI interaction like key event touch event

=> Service Testing
Test varioous states of service lifecycle and interaction between application service
User Service test case to test service

=> Content provider Testing
Store and reterive data and make it accessible across application 
User Provider TestCase2 class to test

There are many testing framework are used to conduct integration test for Android such as Troyd, Robolectric, Robotium.


3)  Operational tests

Operational are also called Functional tests or Acceptation Tests. They are high level tests designed to check the completeness and correctness of application

In Android FitNesse in open-source framework that makes it easy to conduct operational test for target application.




4) System tests :--------------------------------------------------------------------------


In system Testing the system is tested as a whole and the interation between the components software and hardware is checked.

In Android System testing normally includes
=> GUI tests
=> Usability tests
=> Performance tests
=> Stress tests


Performance Testing is given more focus.You can use tool like Traceview to conduct performance test on Android. This tool can help debug your application and profile its performance.

